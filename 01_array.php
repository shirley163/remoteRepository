<?php

// 什么是数组？

// 数组不是标量类型，是复合类型，意味着不能使用echo输出，输出页面中需要使用print_r，最好再配合HTML标签<pre>使用
// 

// 可以在一个变量，存储一个或多个有序的数据信息

// $a = "abdcef";

// echo $a[5];
// 
// 存储在数组中的有序信息，也是通过[]中输入数据信息的键位，此种方式来提取数据
// 

// 数组的语法：
// 
// 旧版本写法：

// $a = array(1,2,3,4,5,6,7,8);


// 新版本写法，推荐使用新版本，其他计算机语言数组语法与此方法相同
// $a = [1,2,3,4,5,6,7,8,9];

// echo  $a[5];

// 如果数组初始化时，没有给数组内的数据添加键位，那么PHP程序会自动添加从0 开始的下标。PHP程序员也可以认为的添加键位，需要注意：键位，只能是整数和字符串
// 

// 认为添加键位

// $b = [
// 	// 键位 => 数据信息	
// 	1 => 50 ,
// 	5 => 100 ,
// 	2 => 500 ,
// 	"2" => 501,
// 	0 => 700 ,
// 	888 => 200 ,
// 	55 => 55,
// 	585=> 888,
// 	900,

	

// 	"姓名" => "张三",
// 	"年龄" => 88,
// 	"性别" => "女性",
// 	"姓名" => "李四",

// ];

// echo $b[2];

// $c = [
// 	"姓名" => [[]1,2,3,4,5,[]],

// 	"年龄" => 88,
// 	"性别" => "女性",	
// 	900,
// ];




// 总结：整数

// 如果程序员添加了整数键位给数据信息，那么数据信息的键位就是添加的键位，默认键位就无效了。

// 如果有没有指定键位的数据信息，那么PHP仍然会默认添加整数键位，键位是之前最大的整数键位的下一位
// 


// 字符串作为键位，必须要添加""定界符
// 
// 字符串键位，对于PHP系统自动添加键位的数字排序，没有影响
// 
// 字符串键位(关联键位)，调取数据时，[]中需要添加""以及关联键位
// 

// PHP系统不区分整数键位和字符串键位，可以混合编写使用，但是人为的为了区分这两种键位，命名为：整数型键位为索引键位，字符串型键位为关联键位



// echo "<pre>";
// print_r($c);
// echo "</pre>";

// 通过键位"姓名"，读取数组$c中的数据，发现$c["姓名"]，对应的数据是个，字符串，那么字符串是可以使用echo
// 
// echo $c["姓名"];

// 自己建立数组，关联，索引，读取其中相应的信息
// 



// PHP中数组数据的修改

// 1，在初始化时，如果定义的索引键位和关键键位数值相同，例如数字2和字符串"2",php程序会认为这是两个相同的键位，会将之后的赋值覆盖之前的赋值

// 2，在PHP程序的操作中，也可以通过读取键位，重新赋值的形式，来对PHP数组中的数据进行修改
// 



// 删除数组中的数据
// 使用unset函数
// 通过键位，删除指定的数据信息
// 
// 注意：删除数据信息，不会对已有的索引键位的编号顺序造成影响






$a = [
	"name" => "lily",
	"age"  => 18,
	"sex"  => "girl",
	1  => 100 , 
	2  => 200 , 
	3  => 300 , 
	4  => 400 , 
	500,
];

$a["name"] = "lucy";

// 通过键位赋值
// 已有键位是修改，没有键位是新增

$a["addr"] = "北京";


// 没有键位赋值，也是新增数据，键位是PHP指定的索引键位
$a[] = 1555414;  

unset($a[4]);

$b = [
	100,
	0 => 500 ,

];



echo "<pre>";
print_r($b);
echo "</pre>";


